{
  "uid" : "b06c0fdc2bfd937b",
  "name" : "test_toCustomerDetail[casedata0]",
  "fullName" : "testcase.test_01_sbed.test_01_jjgl.test_01_dkjdcx.Test_dkjdcx#test_toCustomerDetail",
  "historyId" : "88fac6d11722204a90e9b86930ccc986",
  "time" : {
    "start" : 1702543162530,
    "stop" : 1702543187832,
    "duration" : 25302
  },
  "description" : "\n        检查点击客户姓名是否正常进入该客户详情页\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    检查点击客户姓名是否正常进入该客户详情页\n    :return:\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '*珊' == '*'\n  - *\n  + *珊",
  "statusTrace" : "self = <test_01_dkjdcx.Test_dkjdcx object at 0x1043263a0>\ncasedata = {'check': {'content': '仲营营'}, 'data': {'baseQuery': '仲营营'}, 'detail': '点击客户姓名进入对应客户详情页', 'id': 'test_dkjdcx011', ...}\nrequest = <FixtureRequest for <Function test_toCustomerDetail[casedata0]>>\n\n    @allure.story(\"检查点击客户姓名是否正常进入该客户详情页\")\n    @pytest.mark.parametrize('casedata',testData.get_testcase(\"test_dkjdcx012\"))\n    def test_toCustomerDetail(self,casedata,request):\n        \"\"\"\n        检查点击客户姓名是否正常进入该客户详情页\n        :return:\n        \"\"\"\n        log.info(\"当前执行测试用例ID-> {0} ; 测试点-> {1}\".format(casedata['id'],casedata['detail']))\n        self.driver(request)\n        dkjdcx = Dkjdcx(self.driver)\n        # dkjdcx.input_baseQuery(casedata['data']['baseQuery'])\n        dkjdcx.searchButton_click()\n        time.sleep(5)\n        col_name = dkjdcx.get_col_first_customer_name()\n        dkjdcx.click_col_first_customer_name()\n        time.sleep(20)\n        name1 = dkjdcx.get_customer_name()\n>       assert col_name == \"*\" + name1[1:]\nE       AssertionError: assert '*珊' == '*'\nE         - *\nE         + *珊\n\ntestCase/test_01_sbed/test_01_jjgl/test_01_dkjdcx.py:197: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1702543136398,
      "stop" : 1702543151456,
      "duration" : 15058
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_login",
    "time" : {
      "start" : 1702543108121,
      "stop" : 1702543136392,
      "duration" : 28271
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1702543108025,
      "stop" : 1702543108121,
      "duration" : 96
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        检查点击客户姓名是否正常进入该客户详情页\n        :return:\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '*珊' == '*'\n  - *\n  + *珊",
    "statusTrace" : "self = <test_01_dkjdcx.Test_dkjdcx object at 0x1043263a0>\ncasedata = {'check': {'content': '仲营营'}, 'data': {'baseQuery': '仲营营'}, 'detail': '点击客户姓名进入对应客户详情页', 'id': 'test_dkjdcx011', ...}\nrequest = <FixtureRequest for <Function test_toCustomerDetail[casedata0]>>\n\n    @allure.story(\"检查点击客户姓名是否正常进入该客户详情页\")\n    @pytest.mark.parametrize('casedata',testData.get_testcase(\"test_dkjdcx012\"))\n    def test_toCustomerDetail(self,casedata,request):\n        \"\"\"\n        检查点击客户姓名是否正常进入该客户详情页\n        :return:\n        \"\"\"\n        log.info(\"当前执行测试用例ID-> {0} ; 测试点-> {1}\".format(casedata['id'],casedata['detail']))\n        self.driver(request)\n        dkjdcx = Dkjdcx(self.driver)\n        # dkjdcx.input_baseQuery(casedata['data']['baseQuery'])\n        dkjdcx.searchButton_click()\n        time.sleep(5)\n        col_name = dkjdcx.get_col_first_customer_name()\n        dkjdcx.click_col_first_customer_name()\n        time.sleep(20)\n        name1 = dkjdcx.get_customer_name()\n>       assert col_name == \"*\" + name1[1:]\nE       AssertionError: assert '*珊' == '*'\nE         - *\nE         + *珊\n\ntestCase/test_01_sbed/test_01_jjgl/test_01_dkjdcx.py:197: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ca4ab22a4a2b9a36",
      "name" : "log",
      "source" : "ca4ab22a4a2b9a36.txt",
      "type" : "text/plain",
      "size" : 191076
    }, {
      "uid" : "55be026af769cac5",
      "name" : "stderr",
      "source" : "55be026af769cac5.txt",
      "type" : "text/plain",
      "size" : 169
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup::0",
    "time" : {
      "start" : 1702543188047,
      "stop" : 1702543190708,
      "duration" : 2661
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_login::0",
    "time" : {
      "start" : 1702543190710,
      "stop" : 1702543191105,
      "duration" : 395
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "检查点击客户姓名是否正常进入该客户详情页"
  }, {
    "name" : "feature",
    "value" : "社保e贷-进件管理-贷款进度查询页面"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('session_login')"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.test_01_sbed.test_01_jjgl"
  }, {
    "name" : "suite",
    "value" : "test_01_dkjdcx"
  }, {
    "name" : "subSuite",
    "value" : "Test_dkjdcx"
  }, {
    "name" : "host",
    "value" : "kongdeMacBook-Air.local"
  }, {
    "name" : "thread",
    "value" : "22091-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_01_sbed.test_01_jjgl.test_01_dkjdcx"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "casedata",
    "value" : "{'id': 'test_dkjdcx011', 'detail': '点击客户姓名进入对应客户详情页', 'screenshot': 'click_customer_name', 'data': {'baseQuery': '仲营营'}, 'check': {'content': '仲营营'}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('session_login')" ]
  },
  "source" : "b06c0fdc2bfd937b.json",
  "parameterValues" : [ "{'id': 'test_dkjdcx011', 'detail': '点击客户姓名进入对应客户详情页', 'screenshot': 'click_customer_name', 'data': {'baseQuery': '仲营营'}, 'check': {'content': '仲营营'}}" ]
}